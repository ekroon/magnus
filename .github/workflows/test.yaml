name: Test

on:
    - push
    - pull_request

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-latest
                    # intel
                    - macos-13
                    # arm
                    - macos-14
                    - windows-latest
                ruby-version:
                    - "3.2"
                    - "3.3"
                    - "3.4"
                    - head
                rustup-toolchain:
                    - "1.85"
                    - stable
                exclude:
                    - os: windows-latest
                      ruby-version: head

        steps:
            - uses: actions/checkout@v4
            - uses: ruby/setup-ruby@v1
              with:
                  ruby-version: ${{ matrix.ruby-version }}
                  bundler-cache: true
            - if: runner.os != 'Windows'
              uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rustup-toolchain }}

            # fixes "fatal error: 'strings.h' file not found" for Windows,
            # which is down to Ruby being built with gnu/msys2 and the
            # Rust extension with msvc
            - if: runner.os == 'Windows'
              uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rustup-toolchain }}-gnu
            - name: Set BINDGEN_EXTRA_CLANG_ARGS
              shell: bash
              if: runner.os == 'Windows'
              run: echo BINDGEN_EXTRA_CLANG_ARGS="--target=x86_64-pc-windows-gnu --sysroot=${RI_DEVKIT//\\/\/}$MSYSTEM_PREFIX" >> $GITHUB_ENV

            # fixes "fatal error: 'strings.h' file not found" for Linux
            - name: Set LD_LIBRARY_PATH
              if: runner.os == 'Linux'
              run: echo "LD_LIBRARY_PATH=$(ruby -rrbconfig -e'puts RbConfig::CONFIG["libdir"]')${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}" >> $GITHUB_ENV

            # Ruby head is currently missing the power_assert default gem
            - name: Ruby head bug workaround
              if: matrix.ruby-version == 'head'
              run: gem install power_assert

            - name: Example gem tests (blank?)
              working-directory: examples/rust_blank
              run: bundle exec rake test

            - name: Example gem tests (complete object)
              working-directory: examples/complete_object
              run: bundle exec rake test

            - name: Example gem tests (custom exception defined in Ruby)
              if: matrix.ruby-version != 'head'
              working-directory: examples/custom_exception_ruby
              run: bundle exec rake test

            - name: Example gem tests (custom exception defined in Rust)
              if: matrix.ruby-version != 'head'
              working-directory: examples/custom_exception_rust
              run: bundle exec rake test

            - name: Run tests
              run: cargo test --workspace
